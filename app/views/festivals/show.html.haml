= render 'shared/navigation'

%header.header#header
	.header-container
		%h1.header-title
			OFF AT FORUM
		%h2.header-subtitle
			OPEN AIR / DAY EVENTS / 2 STAGES / PRIVATE BEACH LOCATION
		%h2.header-subtitle
			16-19TH JUNE / OFF WEEK AT PARC DEL FORUM / BARCELONA

%section.videos#videos
	.container
		.row.videos-grid.no-gutter
			- @videos.each do |video|
				= link_to(video.link, class: 'col-md-6 col-md-offset-3 videos-item swipebox') do
					= image_tag(video.image.url(:large), class: 'video-image')
					.videos-item-hover
						.videos-item-hover-caption
							%p.videos-item-hover-caption-text
								#{video.name}
							%p.videos-item-hover-caption-icon.icon.icon-play
								= icon('play')
%section.artists#artists
	.container
		.row
			%h1.section-heading
				= t "artists.title"
		.row.artists-filters
			- @events.each do |event|
				.artists-filter-button.filter{"data-filter" => ".#{event.slug}"}
					#{event.name}
		.row.artists-grid
			- @events.each do |event|
				- event.artists.each do |artist|
					= link_to(artist.name, festival_artist_path(params[:id],artist), :class => "artists-item mix #{event.slug}")

%section.events#events
	.container
		.row
			%h1.section-heading
				= t "events.title"
		- @events.each do |event|
			= link_to(festival_event_path(params[:id],event), class: 'events-item') do
				.row
					= image_tag(event.image.url(:large), class: 'event-image')
				.row
					.events-item-caption
						%h2.events-item-caption-title
							#{event.name}
						%h3.events-item-caption-subtitle
							#{event.starts_on.to_date.to_formatted_s(:long)}

%section.news.no-gutter#news
	.container-fluid
		.col-md-12
			.row
				%h1.section-heading
					= t "news.title"
			.row
				.swiper-container
					.swiper-wrapper
						- @news.each do |news|
							= link_to(festival_news_path(params[:id],news), class: 'news-item swiper-slide') do
								.row.no-gutter
									.col-md-12
										= image_tag(news.image.url(:large), class: 'news-image')
										.item-hover
											%p.news-item-hover-caption
												+
								.row.no-gutter
									.item-caption
										%h2
											#{news.title}
										%h3
											#{news.subtitle}
					.swiper-button-next
					.swiper-button-prev

%section.venue#venue
	.container
		.row
			%h1.section-heading
				= t "venues.title"
		.row
			.col-md-10.col-md-offset-1
				- @venues.each do |venue|
					= link_to(festival_venue_path(params[:id],venue), :class => "venues-item") do
						.row.no-gutter
							.col-md-12
								- venue.images.each do |image|
									= image_tag(image.file.url(:large), class: 'venue-image')
									.item-hover
										%p
											+
						.row.no-gutter
							.item-caption
								%h2
									#{venue.name}

%section.sponsors#sponsors
	.container
		- @sponsors.each do |sponsor|
			= link_to(sponsor.link, class: 'sponsor-item', target: '_blank') do
				= image_tag(sponsor.image.url(:large), class: 'sponsor-image')

.animated-objects
	.object.quarter
	.object.ball


= render 'shared/footer'


:javascript
	$('.videos-item').swipebox();
	$('.artists-grid').mixItUp();
	var swiper = new Swiper('.swiper-container', {
		slidesPerView: 'auto',
		centeredSlides: true,
		paginationClickable: true,
		nextButton: '.swiper-button-next',
		prevButton: '.swiper-button-prev',
		breakpoints: {
			1200: {
				slidesPerView: 3,
				spaceBetween: 60
			},
			768: {
				slidesPerView: 3,
				spaceBetween: 15
			},
			460: {
				slidesPerView: 1,
				spaceBetween: 15
			}
		}
	});
	
	var _containerHeight = 4000;
	var _width, _height, _scrollHeight;
	var _movingElements = [];
	var _scrollPercent = 0;
	var pre = prefix();
	var _jsPrefix  = pre.lowercase;
	if(_jsPrefix == 'moz') _jsPrefix = 'Moz'
	var _cssPrefix = pre.css;
	var _positions = [
		{
			name: 'quarter', 
			start: {
				percent: 0.01, x: 0, y: 0.25
			},
			end: {
				percent: 0.28, x: 0, y: 0.005
			}
		},
		{
			name: 'ball', 
			start: {
				percent: 0.01, x: 0.65, y: 0.5
			},
			end: {
				percent: 0.5, x: 0.65, y: 0.01
			}
		}
	]

	resize();
	initMovingElements();

	function initMovingElements() {
		for (var i = 0; i < _positions.length; i++) {
			_positions[i].diff = {
			percent: _positions[i].end.percent - _positions[i].start.percent,
			x: _positions[i].end.x - _positions[i].start.x,
			y: _positions[i].end.y - _positions[i].start.y,
			}
			_positions[i].target = {};
			_positions[i].current = {};
			var el = document.getElementsByClassName('object '+_positions[i].name)[0];
			_movingElements.push(el);
		}
	}

	function resize() {
		_width = window.innerWidth;
		_height = window.innerHeight;
		_scrollHeight = _containerHeight-_height;
	}


	function updateElements() {
	  for (var i = 0; i < _movingElements.length; i++) {
		var p = _positions[i];
		if(_scrollPercent <= p.start.percent) {
			p.target.x = p.start.x*_width;
			p.target.y = p.start.y*_containerHeight;
		} else if(_scrollPercent >= p.end.percent) {
			p.target.x = p.end.x*_width;
			p.target.y = p.end.y*_containerHeight;
		} else {
			p.target.x = p.start.x*_width + (p.diff.x*(_scrollPercent-p.start.percent)/p.diff.percent*_width);
			p.target.y = p.start.y*_containerHeight + (p.diff.y*(_scrollPercent-p.start.percent)/p.diff.percent*_containerHeight);
		}

		if(!p.current.x) {
			p.current.x = p.target.x;
			p.current.y = p.target.y;
		} else {
			p.current.x = p.current.x + (p.target.x - p.current.x)*0.1;
			p.current.y = p.current.y + (p.target.y - p.current.y)*0.1;
		}
		_movingElements[i].style[_jsPrefix+'Transform'] = 'translate3d('+p.current.x+'px, '+ p.current.y+'px, 0px)';
		}
	}



	function loop() {
		_scrollOffset = window.pageYOffset || window.scrollTop;
		_scrollPercent = _scrollOffset/_scrollHeight || 0;
		updateElements();

		requestAnimationFrame(loop);
	}

	loop();

	window.addEventListener('resize', resize);


	function prefix() {
		var styles = window.getComputedStyle(document.documentElement, ''),
			pre = (Array.prototype.slice
			.call(styles)
			.join('') 
			.match(/-(moz|webkit|ms)-/) || (styles.OLink === '' && ['', 'o'])
			)[1],
			dom = ('WebKit|Moz|MS|O').match(new RegExp('(' + pre + ')', 'i'))[1];
		return {
			dom: dom,
			lowercase: pre,
			css: '-' + pre + '-',
			js: pre[0].toUpperCase() + pre.substr(1)
		};
	}

	var $window = $(window);

	